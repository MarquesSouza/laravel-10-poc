version: '3'
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - redis
            - minio
            - pgsql
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-63792}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-8000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
        volumes:
            - 'sail-minio:/data/minio'
        networks:
            - sail
        command: 'minio server /data/minio --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - curl
                - '-f'
                - 'http://localhost:9000/minio/health/live'
            retries: 3
            timeout: 5s
    pgsql:
        image: 'postgres:15'
        ports:
            - '${FORWARD_DB_PORT:-54322}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    sonarqubedb:
        image: postgres:12
        ports:
            - "54321:5432"
        environment:
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
            POSTGRES_DB: sonar
        volumes:
            - sailpostgresql:/var/lib/postgresql
            - sailpostgresql_data:/var/lib/postgresql/data
        networks:
            - sail

    sonarqube:
        image: sonarqube:community
        environment:
            SONAR_JDBC_URL: jdbc:postgresql://sonarqubedb:5432/sonar
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar
        volumes:
            - sailsonarqube_data:/opt/sonarqube/data
            - sailsonarqube_extensions:/opt/sonarqube/extensions
            - sailsonarqube_logs:/opt/sonarqube/logs
            - sailsonarqube_temp:/opt/sonarqube/temp
        ulimits:
            nproc: 131072
            nofile:
                soft: 8192
                hard: 131072
        ports:
            - "9003:9000"
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-redis:
        driver: local
    sail-minio:
        driver: local
    sail-pgsql:
        driver: local
    sailsonarqube_data:
        driver: local
    sailsonarqube_extensions:
        driver: local
    sailsonarqube_logs:
        driver: local
    sailsonarqube_temp:
        driver: local
    sailpostgresql:
        driver: local
    sailpostgresql_data:
        driver: local
